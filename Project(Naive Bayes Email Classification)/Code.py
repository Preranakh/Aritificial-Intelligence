# -*- coding: utf-8 -*-
"""AI Project(Fall2021)_Khatiwada_Prerana.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1I1nKmyCS01ycQOUWNO3A7oYN2Pe4aVgV
"""

import numpy as np
import urllib.request
from sklearn.model_selection import train_test_split
url =" http://archive.ics.uci.edu/ml/machine-learning-databases/spambase/spambase.data"
raw_data = urllib.request.urlopen(url)
dataset = np.loadtxt(raw_data,delimiter=",")

"""Split train and test"""

x = dataset[:,0:-1]
y = dataset[:,-1]

"""convert data set into binary 1/2"""

m = np.median(x, axis = 0)
x = (x>m)*2+(x<=m)*1; # making the feature vectors binary

"""Split train and test"""

x_train,x_test,y_train,y_test= train_test_split(x,y,test_size = 0.3, random_state = 17)

"""find PRIOR probability of P(y=1) and P(y=0)"""

# number of evidence
yRows=len(y_train)
print(yRows)
#number of dataset y labeled as 1; Y=1
yTrain1= np.count_nonzero(y_train == 1)

#number of dataset y labeled as 0; Y=0
yTrain0= np.count_nonzero(y_train == 0)

#P(Y=1)
P_Y_1=yTrain1/yRows
#P(Y=0)
P_Y_0=yTrain0/yRows

"""FInd Likelyhood probability P(X=xi|Y=1) and P(X=xi|Y=0)"""

# find no of P(X=1|Y=1),P(X=2|Y=1),P(X=1|Y=0), P(X=2|Y=0)
#Turin=np.zeros(10000)

P_of_Fx_1_Y1 =np.zeros((1,57)) #P(X=1|Y=1)
P_of_Fx_2_Y1 = np.zeros((1,57)) 
P_of_Fx_1_Y0 =np.zeros((1,57))
P_of_Fx_2_Y0 = np.zeros((1,57))

for j in range(57):
  no_Fx_1_Y1=0
  no_Fx_2_Y1=0
  no_Fx_1_Y0=0
  no_Fx_2_Y0=0

  # find the n(x=1 and y=1), n(x=2 and y=1), n(x=2 and y=0), n(x=1 and y=0),
  for i in range(3220):
    if x_train[i][j]==1 and y_train[i]==1:
      no_Fx_1_Y1=no_Fx_1_Y1+1
    elif x_train[i][j]==2 and y_train[i]==1:
      no_Fx_2_Y1=no_Fx_2_Y1+1
    elif x_train[i][j]==1 and y_train[i]==0:
      no_Fx_1_Y0=no_Fx_1_Y0+1
    else:
      no_Fx_2_Y0 =no_Fx_2_Y0 +1
    # now we know p(x=1|y=1)= n(x=1 and y=1)/ no of y=1
  P_of_Fx_1_Y1[0][j] = no_Fx_1_Y1/yTrain1 # (no of x==1 and y==1)/no of y==1
  P_of_Fx_2_Y1[0][j] = no_Fx_2_Y1/yTrain1 # (no of x==2 and y==1)/no of y==1
  P_of_Fx_1_Y0 [0][j]= no_Fx_1_Y0/yTrain0 # (no of x==1 and y==0)/no of y==0
  P_of_Fx_2_Y0[0][j]=  no_Fx_2_Y0/yTrain0 # (no of x==2 and y==0)/no of y==0

"""Test set prediction P(y=1|X=x1....xd) > P(y=0|x=x1....xd) predict =1
Step 1: We have P(y=1) and P(y=0);
Step 2: we have P(X=1|Y=1); P(X=1|Y=0);P(X=2|Y=1); P(X=2|Y=0);  
Step 3: Based on Given test data select likelihood and multiply with P(y=1) and P(y=0) separately.
"""

print (x_test.shape)
testRow=len(x_test)
predict=np.zeros(testRow)
#P_Y_1 =P(y=1) and P_Y_0=P(y=0)
for i in range (testRow):
  probabilty_of_x_given_y1=1
  probabilty_of_x_given_y0=1
  for j in range (57):
    if x_test[i][j]==1:
      probabilty_of_x_given_y1=probabilty_of_x_given_y1*P_of_Fx_1_Y1[0][j]
      probabilty_of_x_given_y0=probabilty_of_x_given_y0*P_of_Fx_1_Y0[0][j]
    else:
      probabilty_of_x_given_y1=probabilty_of_x_given_y1*P_of_Fx_2_Y1[0][j]  
      probabilty_of_x_given_y0=probabilty_of_x_given_y0*P_of_Fx_2_Y0[0][j]
    P_Y_1_given_x=probabilty_of_x_given_y1*P_Y_1
    P_Y_0_given_x=probabilty_of_x_given_y0*P_Y_0
 
  if  P_Y_1_given_x > P_Y_0_given_x:
    predict[i]=1

  for j in range (57):
    if P_Y_1_given_x > P_Y_0_given_x:
      print('Label is 1-Email is Spam')
    else:
      print('Label is 2_Not Spam')

"""Test accuracy"""

Successful=0
notSuccessful=0
nYtest = len(y_test)
print ("\nLength of y_test", nYtest)
Successful=0
notSuccessful=0

for i in range(nYtest):
  if predict[i]==1 and  y_test[i]==1 or predict[i]==0 and  y_test[i]==0: 
    Successful=Successful+1
  else:
    notSuccessful=notSuccessful+1

print(" Successfull ", Successful)
Test_error=notSuccessful/nYtest
print("Test_error", Test_error)
Test_accuracy=1-Test_error
print ("Accuracy ", Test_accuracy)